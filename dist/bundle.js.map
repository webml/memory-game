{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;ACAO;;AAEP;AACA,cAAc;AACd,eAAe;AACf;AACA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;;;;;;AClC2B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iDAAe;AACnC;AACA;AACA;AACA,wBAAwB,iDAAe;AACvC,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;;AAEO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;;;ACjP4B;;AAErB;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,iDAAe;AACnB;;AAEA;;AAEO;AACP;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL,IAAI,iDAAe;AACnB;;AAEA;;;;;;;UC9CA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;ACNA;AACe;AACG;AACC;AACO","sources":["webpack://memorycardgame/./src/css/style.css?6b7b","webpack://memorycardgame/./src/js/app.js","webpack://memorycardgame/./src/js/blocks.js","webpack://memorycardgame/./src/js/screens.js","webpack://memorycardgame/webpack/bootstrap","webpack://memorycardgame/webpack/runtime/define property getters","webpack://memorycardgame/webpack/runtime/hasOwnProperty shorthand","webpack://memorycardgame/webpack/runtime/make namespace object","webpack://memorycardgame/./src/js/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","export const app = document.querySelector(\".app\");\n\nwindow.application = {\n    blocks: {},\n    screens: {},\n    renderScreen: function (screenName) {\n        if (window.application.screens[screenName] === undefined) {\n            return;\n        }\n\n        app.textContent = \"\";\n\n        window.application.screens[screenName]();\n    },\n    renderBlock: function (blockName, container, content, className) {\n        if (window.application.blocks[blockName] === undefined) {\n            console.log(\"Такой блок не существует\");\n        }\n\n        window.application.blocks[blockName](container, content, className);\n    },\n    time: \"00.00\",\n\n    level: null,\n\n    gameStatus: null,\n\n    gameCards: [],\n\n    choiceCards: null,\n};\n\nwindow.addEventListener(\"load\", () => {\n    window.application.renderScreen(\"select-level\");\n});\n","import { app } from \"./app\";\n\nconst allCards = [\n    \"static/cards/sa.png\",\n    \"static/cards/sk.png\",\n    \"static/cards/sq.png\",\n    \"static/cards/sj.png\",\n    \"static/cards/s10.png\",\n    \"static/cards/s9.png\",\n    \"static/cards/s8.png\",\n    \"static/cards/s7.png\",\n    \"static/cards/s6.png\",\n    \"static/cards/ha.png\",\n    \"static/cards/hk.png\",\n    \"static/cards/hq.png\",\n    \"static/cards/hj.png\",\n    \"static/cards/h10.png\",\n    \"static/cards/h9.png\",\n    \"static/cards/h8.png\",\n    \"static/cards/h7.png\",\n    \"static/cards/h6.png\",\n    \"static/cards/da.png\",\n    \"static/cards/dk.png\",\n    \"static/cards/dq.png\",\n    \"static/cards/dj.png\",\n    \"static/cards/d10.png\",\n    \"static/cards/d9.png\",\n    \"static/cards/d8.png\",\n    \"static/cards/d7.png\",\n    \"static/cards/d6.png\",\n    \"static/cards/ca.png\",\n    \"static/cards/ck.png\",\n    \"static/cards/cq.png\",\n    \"static/cards/cj.png\",\n    \"static/cards/c10.png\",\n    \"static/cards/c9.png\",\n    \"static/cards/c8.png\",\n    \"static/cards/c7.png\",\n    \"static/cards/c6.png\",\n];\n\nexport const renderHeaderBlock = (container, content, className) => {\n    const header = document.createElement(\"h1\");\n    header.classList.add(className);\n    header.textContent = content;\n\n    container.appendChild(header);\n};\n\nwindow.application.blocks[\"header\"] = renderHeaderBlock;\n\nexport const renderSelectLevelBlock = (container) => {\n    const selectLevel = document.createElement(\"div\");\n    selectLevel.classList.add(\"level-popup__select-level\");\n\n    window.application.renderBlock(\"select-btn\", selectLevel, 1);\n    window.application.renderBlock(\"select-btn\", selectLevel, 2);\n    window.application.renderBlock(\"select-btn\", selectLevel, 3);\n\n    container.appendChild(selectLevel);\n};\n\nwindow.application.blocks[\"select-level\"] = renderSelectLevelBlock;\n\nexport const renderSelectBtnBlock = (container, content) => {\n    const selectBtn = document.createElement(\"button\");\n    selectBtn.classList.add(\"level-popup__select-btn\");\n    selectBtn.textContent = content;\n\n    selectBtn.addEventListener(\"click\", () => {\n        window.application.level = content;\n\n        const selectButtons = container.getElementsByClassName(\n            \"level-popup__select-btn\"\n        );\n\n        for (let element of selectButtons) {\n            element.classList.remove(\"level-popup__select-btn_active\");\n        }\n\n        selectBtn.classList.add(\"level-popup__select-btn_active\");\n    });\n\n    container.appendChild(selectBtn);\n};\n\nwindow.application.blocks[\"select-btn\"] = renderSelectBtnBlock;\n\nexport const renderActiveBtnBlock = (container, content, className) => {\n    const activeBtn = document.createElement(\"button\");\n    activeBtn.classList.add(className);\n    activeBtn.textContent = content;\n\n    activeBtn.addEventListener(\"click\", () => {\n        if (content === \"Старт\") {\n            switch (window.application.level) {\n                case null: {\n                    const error = document.createElement(\"div\");\n                    app.appendChild(error);\n                    error.textContent = \"Сложность не выбрана\";\n                    error.classList.add(\"error\");\n                    setTimeout(() => {\n                        app.removeChild(error);\n                    }, 1500);\n\n                    break;\n                }\n                case 1: {\n                    console.log(\"level 1\");\n                    window.application.level = 6;\n                    window.application.renderScreen(\"game\");\n                    break;\n                }\n                case 2: {\n                    console.log(\"level 2\");\n                    window.application.level = 12;\n                    window.application.renderScreen(\"game\");\n                    break;\n                }\n                case 3: {\n                    console.log(\"level 3\");\n                    window.application.level = 18;\n                    window.application.renderScreen(\"game\");\n                    break;\n                }\n            }\n        }\n    });\n\n    container.appendChild(activeBtn);\n};\n\nwindow.application.blocks[\"active-btn\"] = renderActiveBtnBlock;\n\nexport const renderGameBarBlock = (container) => {\n    const gameBar = document.createElement(\"div\");\n    gameBar.classList.add(\"game-bar\");\n\n    window.application.renderBlock(\"timer\", gameBar);\n\n    window.application.renderBlock(\n        \"active-btn\",\n        gameBar,\n        \"Начать заново\",\n        \"game-bar__restart-btn\"\n    );\n\n    container.appendChild(gameBar);\n};\n\nwindow.application.blocks[\"game-bar\"] = renderGameBarBlock;\n\nexport const renderTimerBlock = (container) => {\n    const timer = document.createElement(\"div\");\n    timer.classList.add(\"game-bar__timer\");\n\n    const timerDesc = document.createElement(\"div\");\n    timerDesc.classList.add(\"game-bar__timer-description\");\n    timer.appendChild(timerDesc);\n\n    const min = document.createElement(\"p\");\n    min.textContent = \"min\";\n    timerDesc.appendChild(min);\n\n    const sec = document.createElement(\"p\");\n    sec.textContent = \"sec\";\n    timerDesc.appendChild(sec);\n\n    const time = document.createElement(\"p\");\n    time.classList.add(\"game-bar__timer-time\");\n    time.textContent = window.application.time;\n    timer.appendChild(time);\n    container.appendChild(timer);\n};\n\nwindow.application.blocks[\"timer\"] = renderTimerBlock;\n\nexport const renderCardsBlock = (container) => {\n    const cards = document.createElement(\"div\");\n    cards.classList.add(\"cards\");\n\n    let cardsId = 0;\n    let cardsFront;\n\n    const getRandCard = () => {\n        let rand = Math.floor(Math.random() * allCards.length);\n        window.application.gameCards.push(allCards[rand]);\n        window.application.gameCards.push(allCards[rand]);\n    };\n\n    while (window.application.gameCards.length !== window.application.level) {\n        getRandCard();\n    }\n\n    window.application.gameCards = window.application.gameCards.sort(\n        () => Math.random() - 0.5\n    );\n\n    while (cardsId !== window.application.level) {\n        cardsFront = window.application.gameCards[cardsId];\n        window.application.renderBlock(\"card\", cards, cardsId, cardsFront);\n        cardsId++;\n    }\n\n    cards.addEventListener(\"click\", (card) => {\n        if (card.target.id === \"\") {\n            return;\n        }\n\n        card.target.src = window.application.gameCards[card.target.id];\n\n        switch (window.application.choiceCards) {\n            case null:\n                window.application.choiceCards = card.target.src;\n                break;\n\n            case card.target.src:\n                alert(\"You win!\");\n                window.application.choiceCards = null;\n                break;\n\n            default:\n                alert(\"You lose!\");\n                break;\n        }\n    });\n\n    container.appendChild(cards);\n};\n\nwindow.application.blocks[\"cards\"] = renderCardsBlock;\n\nexport const renderCardBlock = (container, cardsId, cardsFront) => {\n    const card = document.createElement(\"img\");\n    card.src = cardsFront;\n    card.classList.add(\"card\");\n    card.id = cardsId;\n\n    container.appendChild(card);\n};\n\nwindow.application.blocks[\"card\"] = renderCardBlock;\n","import { app } from \"./app\";\n\nexport const renderSelectLevelScreen = () => {\n    const levelPopup = document.createElement(\"div\");\n    levelPopup.classList.add(\"level-popup\");\n\n    window.application.renderBlock(\n        \"header\",\n        levelPopup,\n        \"Выбери сложность\",\n        \"level-popup__header\"\n    );\n\n    window.application.renderBlock(\"select-level\", levelPopup);\n\n    window.application.renderBlock(\n        \"active-btn\",\n        levelPopup,\n        \"Старт\",\n        \"level-popup__start-btn\"\n    );\n\n    app.appendChild(levelPopup);\n};\n\nwindow.application.screens[\"select-level\"] = renderSelectLevelScreen;\n\nexport const renderGameScreen = () => {\n    const gameScreen = document.createElement(\"div\");\n    gameScreen.classList.add(\"game-screen\");\n\n    window.application.renderBlock(\"game-bar\", gameScreen);\n\n    window.application.renderBlock(\"cards\", gameScreen);\n\n    setTimeout(() => {\n        const cards = document.getElementsByClassName(\"card\");\n\n        for (const card of cards) {\n            card.src = \"static/card_back.png\";\n        }\n    }, 5000);\n\n    app.appendChild(gameScreen);\n};\n\nwindow.application.screens[\"game\"] = renderGameScreen;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* eslint-disable prettier/prettier */\r\nimport \"./app\";\r\nimport \"./blocks\";\r\nimport \"./screens\";\r\nimport \"../css/style.css\";\r\n"],"names":[],"sourceRoot":""}